function git-commit
  if test -z $argv[1]
    git commit -m 'Refactor'
  else
    git commit -m "$argv[1]"
  end
end

function git-add-commit-push 
  git add --all
  if test -z $argv[1]
    git commit -m 'Refactor'
  else
    git commit -m "$argv[1]"
  end
  git push
end

function git-log-graph
  if test -z $argv[1]
    git log --graph --pretty=format:$GIT_LOG_PRETTY_FORMAT --abbrev-commit --max-count=$argv[1]
  else
    git log --graph --pretty=format:$GIT_LOG_PRETTY_FORMAT --abbrev-commit --max-count=10
  end
end

function git-find-dirs
  # find all directories ending in .git (including hidden and ignored listings)
  fd '^.git$' $argv[1] -HIt d | sed 's/.git$//'
end

function exec-on-git-repos 
  # use fzf to get selection, and execute command on it
  set -l result (git-find-dirs $argv[2] | fzf --reverse)
  [ ! -z "$result" ] && $argv[1] $result
end

function gphs 
  for i in **/.git
    echo $i
    git -C $i/.. push
  end
end

function gpls 
  for i in **/.git
    echo $i
    git -C $i/.. pull
  end
end

function gch 
  git clone git@github.com:$argv[1] $SRC/github.com/$argv[1]
end
