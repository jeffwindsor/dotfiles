#!/bin/bash

#== ASDF  https://asdf-vm.com/
function an() {
	local name
	if [[ $# -eq 0 ]]; then
		name=$(asdf plugin list | fzf)
	else
		name=$1
	fi
	asdf install $name $({
		comm -23 <(asdf list all $name | sort --version-sort) <(asdf list $name | awk '{print $1}' | sort --version-sort)
		echo "latest"
	} | fzf --preview="" --header="$name")
}

function anp() {
	local selection = $(asdf plugin list all | awk '{print $1}')
	[[ -n $selection ]] && asdf plugin add $selection
}

al="asdf latest --all"
all="asdf plugin list"
apa="asdf plugin add"
apl="asdf plugin list"

function add_asdf() {
	echo -e "${FG_LIGHTBLUE} ==> adding $1 version $2 ${NC}"
	asdf plugin add "$1"
	asdf install "$1" "$2"
	asdf set "$1" "$2"
}

function asdf_sync() {
	# do this in home directory so .tool_version is used globally
	cd

	machine=$(networksetup -getcomputername)
	echo "${FG_LIGHTBLUE}machine name: $machine ${NC}"
	echo -e "${FG_YELLOW} warning: validate this exists or add it ${NC}"
	echo -e "${FG_GRAY} export PATH='\${ASDF_DATA_DIR:-\$HOME/.asdf}/shims:\$PATH' >> .shellrc.local ${NC}"
	echo -e "${FG_LIGHTBLUE} == applying asdf config == ${NC}"

	# all machines
	# nothing yet

	if [[ $machine == "Midnight Air" ]]; then
		# nothing yet
	fi

	if [[ $machine == "WKMZTAFD6544" ]]; then
		add_asdf java corretto-21.0.7.6.1
		add_asdf maven 3.9.9
		add_asdf scala 2.12.18
		add_asdf nodejs 20.19.1
		add_asdf awscli 2.27.0
	fi

	cd -
}
